{"version":3,"sources":["components/TodoComponents/Todo.js","components/TodoComponents/TodoList.js","components/TodoComponents/TodoForm.js","App.js","index.js"],"names":["todo","props","react_default","a","createElement","className","todoTask","completed","onClick","complete","id","task","moment","format","todoList","todos","map","TodoComponents_Todo","key","clickedEvent","todoForm","type","placeholder","onChange","updateValue","value","onKeyDown","e","keyCode","addTodo","clearTodo","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateTodoState","event","setState","target","addTodoList","state","alert","newTodo","Date","concat","window","localStorage","setItem","JSON","stringify","completedTask","updArr","toConsumableArray","val","clearCompletedTask","filteredTodo","filter","item","initalStateTodo","style","color","TodoList","TodoForm","React","Component","getItem","parse","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c9772d75.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport \"./Todo.css\";\n\nconst todo = props => (\n  <div\n    className={props.todoTask.completed ? `todo complete` : \"todo\"}\n    onClick={() => props.complete(props.id)}\n  >\n    {props.todoTask.task}{\" \"}\n    <span className={props.todoTask.completed ? `complete` : ''}>{moment().format(\"MMMM Do YYYY, h:mm:ss a\")}</span>\n  </div>\n);\n\nexport default todo;\n","// your components will all go in this `component` directory.\n// feel free to change this component.js into TodoList.js\n\nimport React from \"react\";\nimport \"./Todo.css\";\n\nimport Todo from \"./Todo\";\n\nconst todoList = props => (\n  <div className='Todo'>\n    {props.todos.map(todo => (\n      <Todo key={todo.id} todoTask={todo} complete={props.clickedEvent} id={todo.id}/>\n    ))}\n  </div>\n);\n\nexport default todoList;\n","import React from \"react\";\nimport \"./Todo.css\";\n\nconst todoForm = props => (\n  <div className=\"TodoForm\">\n    <input\n    type=\"text\"\n      placeholder=\"Enter your Todo item...\"\n            onChange={props.updateValue}\n            value={props.value}\n            onKeyDown={(e) => {\n                if (e.keyCode === 13)\n                {\n                    props.addTodo()\n                }\n            }}\n    />\n    <button className='add' onClick={() => props.addTodo()}>Add Todo</button>\n    <button onClick={()=> props.clearTodo()}>Clear Completed</button>\n  </div>\n);\n\nexport default todoForm;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport TodoList from \"./components/TodoComponents/TodoList\";\nimport TodoForm from \"./components/TodoComponents/TodoForm\";\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: initalStateTodo,\n      todoTask: \"\"\n    };\n  }\n\n  updateTodoState = event => {\n    this.setState({ todoTask: event.target.value });\n  };\n\n  addTodoList = () => {\n    if (this.state.todoTask === \"\") {\n      return alert(\"Pls, enter todo\");\n    }\n    const newTodo = {\n      task: this.state.todoTask,\n      id: new Date(),\n      completed: false\n    };\n    this.setState({ todo: this.state.todo.concat(newTodo), todoTask: \"\" }, () => {\n      window.localStorage.setItem(\"todo\", JSON.stringify(this.state.todo))\n    }\n    );\n  };\n\n  completedTask = id => {\n    const updArr = [...this.state.todo];\n    this.setState({\n      todo: updArr.map(val => {\n        if (val.id === id) {\n          val.completed = true;\n        }\n        return val;\n      })\n    });\n  };\n\n  clearCompletedTask = () => {\n    const filteredTodo = this.state.todo.filter(item => item.completed !== true);\n    this.setState({\n      todo: filteredTodo\n    });\n    window.localStorage.setItem(\"todo\", JSON.stringify(filteredTodo))\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2 style={{ color: \"white\" }}>Welcome to your Todo App!</h2>\n        <TodoList todos={this.state.todo} clickedEvent={this.completedTask} />\n        <TodoForm\n          updateValue={this.updateTodoState}\n          addTodo={this.addTodoList}\n          clearTodo={this.clearCompletedTask}\n          value={this.state.todoTask}\n        />\n      </div>\n    );\n  }\n}\n\nconst defaultTodoList = [\n  {\n    task: \"Organize Garage\",\n    id: 1528817077286,\n    completed: false\n  },\n  {\n    task: \"Bake Cookies\",\n    id: 1528817084358,\n    completed: false\n  }\n];\nif (window.localStorage.getItem(\"todo\") === null)\n{\n  window.localStorage.setItem(\"todo\", JSON.stringify(defaultTodoList));\n}\nconst initalStateTodo = JSON.parse(window.localStorage.getItem(\"todo\"));\n\n\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}